<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>争论</title>
      <link href="/2023/09/17/Thought/%E4%BA%89%E8%AE%BA/"/>
      <url>/2023/09/17/Thought/%E4%BA%89%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="争论"><a href="#争论" class="headerlink" title="争论"></a>争论</h1><p>&emsp;&emsp;作为INTJ人格的我来说，争论是一种本能，从潜意识来说，很多观念和问题，我都想去争辩。我的父亲就曾经教导过我，你有必要去争论吗？赢了又如何，输了又如何呢？有意义吗？人类花了2-3年的时间去学说话，却要花20-30年的时间学会闭嘴。</p><br><p>&emsp;&emsp;我并不想去争论一个输赢，我只是想去更深刻的认识这个观念和问题，我想通过争论可以更深层次的理解事物，探索规律，认清本源。但往往都事与愿违。</p><br><p>&emsp;&emsp;从小，所谓的“大人说话，小孩别插嘴”，在我身上就没体现过。父母跟朋友闲谈的时候，作为旁听的我，时不时都会插嘴，说一说自己的观点。每次的结果都是对我的教育，但我还是“我行我素”，我的思维，我的潜意识，就好像都在催促我反驳，“他们说的好像有问题”，但最终都是以批评结尾的。在学校，过于的争论又会被定义为“钻牛角尖”。</p><br><p>&emsp;&emsp;我真的很想发问：<br>不同人的思维本来就不一样，思考问题的角度方向不一样，那争论起来，不就可以从更多更全的角度认识问题了吗？为什么还会有这么多反对的声音呢？难道所谓的大人们，父母们，你们的思维就一定是正确的吗？历史中，生活中，小孩的某些话点醒你的次数还少吗？难道科学的进步不是科学家钻牛角尖一个个的钻出来的吗？科学家的突破，在整个人类知识中就是一个很小很小的凸起，是一位位的突破，才有了人类怎么丰富的知识海洋。</p><br><p>&emsp;&emsp;很怀恋高中时期啊，高三的同桌，思维思辨能力很强的，争论过程也是不相上下，这种互相争论，一起探讨事情的本质规律，难道不比你背几个公式结论更有意思吗？还记得高一的时候，我们学校一个班上的人，因为数学题目的争论打了起来，这种氛围错了吗？</p><br><p>&emsp;&emsp;可惜啊，这样的争论，真是可遇不可求的呀，现在很少会有人喜欢争论了，都很烦，烦你在那钻牛角尖，烦你在那说教。</p><br><p>&emsp;&emsp;教育错了？世界病了？</p><br><p>&emsp;&emsp;所以在成长过程中，我也慢慢学习着闭嘴，自己都感觉有点可笑了。人与人不一样吧，那能怎么办呢？改变不了所处的环境，就只能改变自己了呀。</p><br><p>&emsp;&emsp;我也不想违背本心行事，该说说，该听听吧。</p><br><p>&emsp;&emsp;但真的很累了啊，当你坐了很多年的轮椅，你还能再起来走路吗？</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>琵琶行</title>
      <link href="/2023/09/06/Life/%E7%90%B5%E7%90%B6%E8%A1%8C/"/>
      <url>/2023/09/06/Life/%E7%90%B5%E7%90%B6%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="420" height="86" src="//music.163.com/outchain/player?type=2&id=1854700148&auto=0&height=66"></iframe><br><br><blockquote><p>午后外公的留声机里咿咿呀呀<br>说长大只能四海为家<br>不改变世界也要给予挣扎<br>麻木的人都学会了牵挂<br>有人被迫使长大 随时准备出发<br>这是幸运真正的定义吗</p></blockquote><p>独自漫步夕阳下，听着这首歌，感到了久违的宁静，思绪一点点的陷进了高三的点点滴滴中，仿佛我又站在了高中教学楼天台，倚靠在栏杆上，跟朋友看着夕阳，吹着自由潇洒的风，期待我们各自的未来，感伤即将分别的现在。<br>这是一位高一的学生的独创，我想这应该写的是青春，是盛夏，是少年，亦是一去不复返的时光吧！ </p><br><br><br><br><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="420" height="86" src="//music.163.com/outchain/player?type=2&id=1985358071&auto=0&height=66"></iframe><br><br><blockquote><p>当你想起小学门口那个婆婆摆的摊位<br>当你想起每个周五放学前的班会<br>当你想起那天浴室镜子里的安慰<br>是不是那段时光要大家一起才般配<br>有点惭愧了 当那么多的画面重叠<br>最后这半杯 敬我那小有遗憾的童年<br>微醺间 弹指间 我仿佛轮回十万年    </p></blockquote><p>谨以此书，纪念我的童年，那是一段小有遗憾的幸福时光。 ———雷欧幻像    </p><p>一转眼就大二了呀<br>小时候的那种纯粹的大自然，没有发达的网络，与弟弟漫山遍野的奔跑游戏，还真是怀恋啊！<br>我想那时候放学了，没有手机，没有电脑，只有在小区里玩躲猫猫的我们吧！     </p><p>“谨以此歌 纪念我小有遗憾的童年”</p><br><br><br><br><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="420" height="86" src="//music.163.com/outchain/player?type=2&id=554311296&auto=1&height=66"></iframe><br><br><p>这首纯音乐给我的第一感觉就是起舞，积极而向上</p><p>“每一个不曾起舞的日子，都是对生命的辜负” ————尼采</p><p>纯音乐嘛，每个人都有每个人的感悟吧！</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>腾讯云serverless部署Hexo个人博客</title>
      <link href="/2023/09/03/Blog/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2023/09/03/Blog/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>&emsp;&emsp;虽然是一名中医学生，但却还是对这些理科类的东西充满了兴趣，同样我也是好折腾，广泛的研究研究，当然小白的拓荒，还会遇到很多问题和困难，需要积极的查阅资料，虽然国内资料是良莠不齐的，但却可以锻炼自己，我还用到了 ChatGTP ，把不会的问题，或者不懂的代码输入， ChatGTP 的解答还是比自己百度搜索来的更快。总之，多尝试，多试错吧<br>&emsp;&emsp; <strong>该文章是第一篇个人博客搭建文章《小白搭建博客与fluid主题运用》的进阶，建议先阅读第一篇文章，因为此文章需要用到第一篇文章的相关内容。</strong></p><h4 id="重新部署原因"><a href="#重新部署原因" class="headerlink" title="重新部署原因"></a>重新部署原因</h4><p>&emsp;&emsp;由于 GitHub 仓库的地址是在美国，所以在中国本地 IP 的电脑想要通过域名访问会很慢，    当然，可以用虚拟私人网路（ VPN 翻墙）来访问，但确实很麻烦。<br>&emsp;&emsp;基于此加速的目的，我先是了解了一些加速访问域名的办法，对于中国的一些cdn软件需要域名备案，比较麻烦，主要是备案需要购买服务器，不是免费的。所以先考虑的全球cdn加速，比如用 Cloudflare 来加速图片，或者用一些储存图片视频的线上网站（因为博客加载较慢主要是因为视频图片内容较多，加载较慢），但这些方法都不理想，加载速度并没有什么改变。<br>&emsp;&emsp; 于是，又将目光转到了一些中国本地支持搭建代码仓库的网站。虽然可能需要重新搭建仓库，但至少在国内访问国内的网站肯定比用 Github 要快一点。<br>&emsp;&emsp; Gitee （码云）固然是第一选择，但是在搭建 Gitee page 时，实名认证的通过很麻烦（吐槽一下，官方给的文件是 2-3 天出结果，但都 7-8 天了还是没结果，就算拍照有问题，那也应该先退回来，并告知原因，我们修改后再提交通过呀）<br>&emsp;&emsp;之后就是华为云，阿里云，腾讯云，但其实在中国，进行互联网之类的工作，都需要备案，在国内还是绕不开备案的阻拦。<br>&emsp;&emsp;既然如此，那就备案吧，由于我是在腾讯云买的域名，所以就直接在腾讯云进行了 qinghuan.live 域名的备案。而且腾讯云也有储存桶可以进行代码储存。那就直接在腾讯云建立代码仓库吧。虽然有 <a href="https://cloud.tencent.com/document/product/1154/40217">官方教程</a> ，但还是有很多小的细节需要自己处理。</p><h3 id="准备条件"><a href="#准备条件" class="headerlink" title="准备条件"></a>准备条件</h3><ol><li>已安装 Node.js <em><strong>（2020年9月1日起，Serverless 组件不再支持 Node.js10.0 以下版本，请注意升级）</strong></em><br>已安装 Git<br>已安装 Hexo<br>这些东西可以参考我的第一篇博客文章《小白搭建博客与fluid主题运用》，其中 <strong>Git 安装</strong> 和 <strong>安装node.js和Hexo</strong> 这两部分</li></ol><br><br><br><br><ol start="2"><li>首先要购买一个云服务器，这里我购买的是腾讯云的轻量应用服务器。<br>打开腾讯云主页，选择左上角的最新活动，在里面选择轻量应用服务器（入门型就可以了），里面的配置其实都可以，只需要<strong>服务器 IP</strong> 就可以了，但是该服务器只可以用一年，到期了就只能原价续费了，我买的是第一个，当时付费 112 元，但一年到期了就要原价 510 元续费了，而且域名备案了，如果服务器更换，还要重新备案，所以，这就像一个吸血虫一样，但它确实好用，金钱的力量</li></ol><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/001...png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/002...png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/003...png"></p><br><br><br><br><ol><li>购买储存桶内存，流量，访问请求。<br>因为你的博客文档内容要储存在腾讯云上，那么你需要购买足够的空间储存<br>此外，上传文件所用的流量也需要你单独购买，还有访问你储存桶的请求次数也需要你购买<br>首先进入腾讯云控制台，搜索进入对象储存，在进入资源包管理的自购资源包<br> 20G 的储存桶足够了，每年要续约<br>先购买 20G 一个月的流量，看看情况，再根据自己的情况决定每月购买情况。<br>访问次数也可以自己决定，每月 20 万次一年也才 2 元，不贵。</li></ol><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/004..png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/005...png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/006..png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/007..png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/008..png"></p><br><br><br><br><ol start="4"><li>至于域名，应该在用 GitHub 仓库部署时应该就买好了，如果没有购买，可以参考我的第一篇博客文章《小白搭建博客与 fluid 主题运用》中的<strong>购买域名</strong>部分，第一年30-40元，之后就是原价了，大概 80-90 元</li></ol><ul><li>综上一下：<br>第一年，服务器 112 元+域名 45 元+储存库内存 20 元+访问次数 2 元 &#x3D; 179 元<br>此外每月流量最多 20 元（ 10G &#x2F; 4 元、 20G &#x2F; 8 元、 50G &#x2F; 20 元）<br>此后每一年，服务器 510 元+域名 90 元+储存库内存 20 元+访问次数 2 元 &#x3D; 622 元<br>此外每月流量最多 20 元（ 10G &#x2F; 4 元、 20G &#x2F; 8 元、 50G &#x2F; 20 元）</li></ul><h2 id="域名备案"><a href="#域名备案" class="headerlink" title="域名备案"></a>域名备案</h2><p>因为我已经备案过一次，模板已经建立好了，所以可能内容不全，不过备案也不难。这里也有腾讯云 <a href="https://cloud.tencent.com/document/product/243/18958">备案官方教程</a> </p><ol><li>进入腾讯云控制台，点击右上角的备案，选择自主备案就好了，不需要花钱</li></ol><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/001....png"></p><br><br><br><br><ol start="2"><li>完成主体的填写，以及云服务器的选择，就是你买好的轻型应用服务器，选择就好，会自动帮你填好 IP 地址的<br>腾讯云初次审核在1-2天左右，如果存在问题，需根据系统的提示修改备案信息并再次提交，会有腾讯云服务人员给你电话的，而且立即修改提交后就可以立马通过（不像 Gitee 重新提交后还要等2天）<br>腾讯云初审通过后，腾讯云将提交您的备案信息至工信部审核，这大概2-3天，局审核后，腾讯云会以短信和邮件的形式通知您。</li></ol><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/002..png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/003..png"></p><br><br><br><br><br><br><br><br><br><br><br><br><h2 id="安装-Serverless-Cloud-Framework"><a href="#安装-Serverless-Cloud-Framework" class="headerlink" title="安装 Serverless Cloud Framework"></a>安装 Serverless Cloud Framework</h2><p>当然这里也是有腾讯云的<a href="https://cloud.tencent.com/document/product/1154/42990">安装教程</a></p><ol><li>首先，要做好准备工作左击桌面左下角的 “ Windows ” 按钮，搜索“命令提示符”应用（ win 10 ），或者在桌面下方的   “ Windows ” 搜索中输入命令提示符（ win 11 ），打开文件位置。<br>之后右击命令提示符，打开属性，点击快捷方式中的高级选项，并勾选“用管理身份运行”，如下图所示</li></ol><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/001.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/002.png"></p><br><br><br><br><ol start="2"><li>打开命令提示符，直接输入命令，如下图所示 <strong>（注意空格）</strong></li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i -g serverless-cloud-framework    </span><br><span class="line">npm update -g serverless-cloud-framework          </span><br><span class="line">scf -v   </span><br></pre></td></tr></table></figure><p>分别是安装 Serverless Cloud Framework、更新 Serverless Cloud Framework、检查是否安装成功和查看的版本信息</p><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/003.png"></p><p>只要命令提示符没给出红色false报错，那就说明已经安装 serverless cloud framework 成功啦！</p><br><br><br><br><br><br><br><br><br><br><br><br><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><ol><li>添加新文件夹</li></ol><ul><li>在你本地博客仓库中的 source 文件夹中添加新的文件夹 _drafts ，如图所示</li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/004.png"></p><br><br><br><br><ol start="2"><li>添加yml源文件并配置 <strong>（官方教程未讲解细节）</strong></li></ol><ul><li>首先，在你本地博客仓库根目录下添加一个yml源文件，但此时你不能直接新建，否则后面有文件不可以识别。        </li><li>打开命令命令提示符，转到博客根目录下，输入命令，如图所示 <strong>（注意空格）</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new &quot;serverless&quot;</span><br></pre></td></tr></table></figure><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/005..png"></p><br><br><ul><li>之后会在 _post 文件夹中找到新增的文件。<br>将新增的文件夹删除，将新增的 .md 文件剪贴到根目录 blog 文件夹下，并将扩展名 .md 修改为 .yml ，如下图所示</li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/006.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/007.png"></p><br><br><ul><li>再向该yml源文件夹中加入配置，不需要修改，入图所示 <strong>（注意空格）</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># serverless.yml  </span><br><span class="line"></span><br><span class="line">component: website  # (必填) 引用 component 的名称，当前用到的是 tencent-website 组件      </span><br><span class="line">name: hexodemo  # (必填) 该 website 组件创建的实例名称       </span><br><span class="line"></span><br><span class="line">app: websiteApp  # (可选) 该 website 应用名称   </span><br><span class="line">stage: dev  # (可选) 用于区分环境信息，默认值是 dev</span><br><span class="line"></span><br><span class="line">inputs:   </span><br><span class="line">  src:   </span><br><span class="line">    src: ./public  # Upload static files generated by HEXO   </span><br><span class="line">    index: index.html   </span><br><span class="line">    # dist: ./dist   </span><br><span class="line">    # hook: npm run build   </span><br><span class="line">    # websitePath: ./   </span><br><span class="line">region: ap-guangzhou   </span><br><span class="line">bucketName: my-bucket   </span><br><span class="line">protocol: https  </span><br></pre></td></tr></table></figure><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/008.png"></p><br><br><ul><li>如下图所示，在该 yml 源文件中，英文输入 ![](.&#x2F;p) 就会弹出 public 选项，而<strong>如果是自己直接新建，没有通过命令提示符创建，有可能就不会弹出public，出现无法完全识别文件夹的情况</strong>。</li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/009..png"></p><p>保存文件，那么文件的配置就完成啦！</p><br><br><br><br><br><br><br><br><br><br><br><br><h2 id="文件部署"><a href="#文件部署" class="headerlink" title="文件部署"></a>文件部署</h2><ol><li>打开命令提示符，输入命令（ scf 就是 Serverless Cloud Framework ， deploy 就是“ d ”）<strong>（注意空格）</strong></li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean    </span><br><span class="line">hexo g    </span><br><span class="line">scf deploy  </span><br><span class="line">``````  </span><br><span class="line"></span><br><span class="line">输入了 scf deploy 后可以微信扫描，但是不清楚，可以就直接复制链接进入网站就好了，如下图所示</span><br><span class="line"></span><br><span class="line">![](https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/010.png)</span><br><span class="line">![](https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/011.png)</span><br><span class="line">![](https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/012.png)</span><br><span class="line">![](https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/013.png)</span><br><span class="line"></span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line"></span><br><span class="line">* 部署成功了可以访问 website Url 访问你的博客静态页面</span><br><span class="line"></span><br><span class="line">![](https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/014.png)</span><br><span class="line"></span><br><span class="line">之后就是完成存储桶（云上仓库）相关的设置</span><br><span class="line"></span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line"></span><br><span class="line">## 储存桶设置和SSL证书的申请</span><br><span class="line"></span><br><span class="line">1. 首先进入腾讯云控制台的对象存储，查看储存桶列表，你会看见刚刚才生成的储存桶，点击进入</span><br><span class="line"></span><br><span class="line">![](https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/015.png)</span><br><span class="line"></span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line"></span><br><span class="line">* 在概述页面，你会看见，你的静态页面访问网站，后面需要将域名解析到该网址上</span><br><span class="line"></span><br><span class="line">![](https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/016..png)</span><br><span class="line"></span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">* 在安全管理跨域访问CORS设置中，进行添加规则     </span><br><span class="line">具体规则设置，见图二</span><br><span class="line"></span><br><span class="line">![](https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/017.png)</span><br><span class="line">![](https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/018.png)</span><br><span class="line"></span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line"></span><br><span class="line">* 在权限管理页面   </span><br><span class="line">首先，储存桶访问访问权限，添加自己的腾讯云云账号，记住 ***必须要打开完全控制*** ，如下图二</span><br><span class="line"></span><br><span class="line">![](https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/019.png)</span><br><span class="line">![](https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/025.png)</span><br><span class="line"></span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line"></span><br><span class="line">* 再在 Policy 权限设置中添加两个策略，记住 ***权限操作都是所有操作***   </span><br><span class="line">分别如下图一二   </span><br><span class="line"></span><br><span class="line">![](https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/020.png)</span><br><span class="line">![](https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/021.png)</span><br><span class="line"></span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line"></span><br><span class="line">2. 申请已备案域名的 SSL 证书，因为，通过域名的访问是 https 访问，所以需要 SSL 证书，才可以开启 https 访问    </span><br><span class="line">腾讯云控制台，搜索 SSL 证书，直接免费申请一年SSL证书即可，到期后继续免费申请一年 SSL 证书即可</span><br><span class="line"></span><br><span class="line">![](https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/023.png)</span><br><span class="line">![](https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/022.png)</span><br><span class="line"></span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line"></span><br><span class="line">3. 继续配置 serverless.yml 文件，加入一下内容 **（注意空格）**  </span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="新增的-CDN-自定义域名配置"><a href="#新增的-CDN-自定义域名配置" class="headerlink" title="新增的 CDN 自定义域名配置"></a>新增的 CDN 自定义域名配置</h1><p>  hosts:<br>    - host:  # 希望配置的自定义域名<br>    https:<br>      switch: on<br>      http2: off<br>      certInfo:<br>        certId:<br>        # certificate: ‘xxx’<br>        # privateKey: ‘xxx’     </p><p>myWebsite:<br>  url:<br>  env:<br>  host:<br>    - https:&#x2F;&#x2F; (CNAME: .cdn.dnsv1.com)      </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">![](https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/024.png)</span><br><span class="line"></span><br><span class="line">保存文件并上传即可啦！并输入命令</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>hexo clean<br>hexo g<br>scf deploy</p><pre><code>&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;## 解析域名和cdn加速 1. 解析已备案域名进行解析，如下图所示![](https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/026.png)&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;2. 在控制台中输入 cdn ，并进入，如图所示  ![](https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/027.png)&lt;br&gt;&lt;br&gt;* 添加你刚刚解析的域名，并完成配置，如下图所示![](https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/028.png)![](https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/029.png)![](https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/030.png)![](https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/016..png)&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;3. 按要求添加完成后，在 cdn 页面，点击你刚刚添加的域名，在 https 配置中，打开 https 服务，和添加你申请的 SSL 证书![](https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/031.png)&lt;br&gt;&lt;br&gt;* 此外， cdn 流量大家也需要自行购买，前六个月是免费的，后面，自行购买，价格也还好![](https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/032.png)&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;4. 最后，在你输入完 scf deploy 后，你需要在 cdn 刷新预热中，刷新一下你的域名，每天只有100此机会          其实也可以不用，等腾讯云自主刷新，但是可能需要一些时间，该方法刷新后，域名访问可以立刻看到变化![](https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E8%85%BE%E8%AE%AF%E4%BA%91serverless%E9%83%A8%E7%BD%B2Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/033.png)&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;那么，到处就结束啦，还是那句话，大家多尝试，多试错就好，多自主查阅查阅资料就好，我也是一步步走过来的，拓荒的过程其实还是很有意思的啦！    云远驹逝，时间过隙，我们的又要说再见啦！因为腾讯云的后期收费，可能有点贵，所以，还会继续查找一些网站或者软件，期待我们下一次旅行吧！拜拜啦！</code></pre>]]></content>
      
      
      <categories>
          
          <category> Hexo博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>长相思</title>
      <link href="/2023/08/05/Life/%E9%95%BF%E7%9B%B8%E6%80%9D/"/>
      <url>/2023/08/05/Life/%E9%95%BF%E7%9B%B8%E6%80%9D/</url>
      
        <content type="html"><![CDATA[<h2 id="蝶恋花·阅尽天涯离别情"><a href="#蝶恋花·阅尽天涯离别情" class="headerlink" title="蝶恋花·阅尽天涯离别情"></a>蝶恋花·阅尽天涯离别情</h2><p>（近现代）王国维</p><p>阅尽天涯离别情，不到归来，零落花如许。花底想看无一语，绿窗春与天俱莫。<br>待把相思灯下诉，一缕新欢，旧恨千千缕。最是人间留不住，朱颜辞镜花辞树。  </p><br>时间无情啊，当我年老归来，故人却如花般凋零，当时分别的场景现在依旧历历在目，两人花底深情脉脉，如今却只剩下了绿窗青天，早已物是人非了。  <p>想要傍着灯，把多年的感情倾诉，但那少许的相见之欢难抵多年的久别相思苦啊。最是人间留不住，只是那镜中一去不复返的青春和那凋零脱落的花朵罢了。</p><p>最是人间留不住，佳人逝容，红落辞书。<br>久别相思之苦，重逢无奈之苦<br>珍惜亲友于当时，不留遗憾在今生 </p><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E9%95%BF%E7%9B%B8%E6%80%9D/%E8%9D%B6%E6%81%8B%E8%8A%B1%C2%B7%E9%98%85%E5%B0%BD%E5%A4%A9%E6%B6%AF%E7%A6%BB%E5%88%AB%E8%8B%A6.jpg" alt="蝶恋花·阅尽天涯离别苦"></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小白搭建博客与fluid主题运用</title>
      <link href="/2023/08/04/Blog/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/"/>
      <url>/2023/08/04/Blog/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>首先感谢小智的幸苦付出，帮本人搭建起来了个人博客, 以及为我解惑。作为一名中医学生，对这方面的了解确实不多，但身为理科生，对数字和字符的敏感，激发了我的兴趣。那么，就以我这样一个小白的视角去看看到底是如何搭建个人博客以及运用 fluid 主题的吧。</p><p>此外，在这里也推荐一个<a href="https://zhuanlan.zhihu.com/p/102592286">教程</a>，本人也是跟着此教程一步步摸索的。</p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ol><li>首先你最好要有翻墙工具，因为下载的一些东西有的在外网上，没有的话，可能会出现卡顿。<br>在这里推荐 clash  ，首先注册一个 GLaDOS 的账号，点击此进入 <a href="https://glados.rocks/">GLaDOS</a><br>进入首页，下载 clash 客户端，注意是 windows 版本。并根据它所给的步骤安装，如下图所示。（根据自己的情况在商店中选择会员）</li></ol><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/001.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/002.png"></p><br><br><br><br><ol><li>左击桌面左下角的 “ Windows ” 按钮，搜索“命令提示符”应用（ win 10 ），或者在桌面下方的   “ Windows ” 搜索中输入命令提示符（ win 11 ），打开文件位置。<br>之后右击命令提示符，打开属性，点击快捷方式中的高级选项，并勾选“用管理身份运行”，如下图所示</li></ol><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/003.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/004.png"></p><br><br> <br><br><ol><li>下载软件 Visual Studio Code ，打开该软件，点击左侧最下方按钮，并搜索下载如图所示的三个插件。</li></ol><ul><li>第一个是语言的转换  </li><li>第二个是用于我们的博客写作，我们需要知道它的使用方法，点击进入 <a href="https://markdown.com.cn/">Markdown官方教程</a> ，学习基本语法和扩展语法。此外还有 <a href="https://blog.csdn.net/heimu24/article/details/81189700">Markdown图片设置</a> 以及 <a href="https://blog.csdn.net/thither_shore/article/details/52181464">Markdown字体颜色大小设置</a> （这些仅供参考，也可自行查找了解学习）<br>一般我们在写作时会打开侧边预览，快捷键“Ctrl+k v”（先按Ctrl+k，再按v，不要同时按）</li><li>第三个是后面用于博客网页显示图片所需的插件。</li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/005.png"></p><br><br><h2 id="GitHub-注册"><a href="#GitHub-注册" class="headerlink" title="GitHub 注册"></a>GitHub 注册</h2><p><strong>正式的第一步，注册 GitHub 账号， GitHub 相当于一个“仓库”（云端），装载着你的博客内容。</strong></p><ol><li>打开 <a href="https://github.com/">GitHub官网</a> （这里需要翻墙，不开vpn可能会进不去），直接输入邮箱注册，如下图所示。</li></ol><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/006.png"></p><br><br><br><br><ol><li>完成填写电子邮箱，密码，用户名即可，如下图所示。</li></ol><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/007.png"></p><br><br><br><br><ol><li>在此之后，会根据你填写的电子邮箱发送验证码，正确填写即可。这便注册成功，之后可根据自己的实际情况填写，也可以点击跳过个性化，搭建个人博客不需要其他很多的无关操作。</li></ol><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/008.png"></p><br><br><br><br><ol><li>出现下图所示，我们的 <strong>注册GitHub</strong> 就完成啦。</li></ol><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/009.png"></p><p>至此，第一步的操作就结束啦！</p><br><br><br><br><br><br><br><br><br><br><br><br><h2 id="Git-安装"><a href="#Git-安装" class="headerlink" title="Git 安装"></a>Git 安装</h2><p>在这之前，我们应该了解一下什么是 Git ， <strong>通俗点说， Git 是一种传输工具，是将你的文件，从本地传输到你的仓库（ GitHub ）中。</strong></p><ol><li><strong>直接进入 Git 官网下载</strong>， <a href="https://git-scm.com/download">Git官网下载</a><br>在这里下载的是2.41.0版本，与教程所给版本2.25.0不同，有所差别。</li></ol><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/010.png"></p><br><br><ul><li>选择 windows （视窗）下载，然后根据电脑系统信息中的系统类型，选择下载适用电脑的 Git 类型</li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/011.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/012.png"></p><br><br><br><br><ol start="2"><li><strong>下载完成后，按照下列步骤一步步操作安装</strong></li></ol><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/013.png"></p><br><br><ul><li>先选择你需要存储 Git 的文件夹</li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/014.png"></p><br><br><ul><li>桌面快捷方式的建立（无需勾选）</li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/015.png"></p><br><br><ul><li>给文件的命名（保持默认就行）</li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/016.png"></p><br><br><ul><li>之后按照图片上的一步步操作勾选即可</li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/017.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/018.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/019.png"></p><br><br><ul><li>此处，<strong>我们要勾选 Git 自带的 SSH</strong> ，在下一个步骤中，我们需要利用 SSH 来完成  GitHub 的绑定并提交文件，这样很方便快捷</li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/020.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/021.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/022.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/023.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/024.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/025.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/026.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/027.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/028.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/029.png"></p><br><br><br><br><ol><li>安装完成后，<strong>打开命令提示符（上文准备工作中所提及的），直接输入 git 回车即可。观察是否出现了如图所示的字样，如果出现了，则说明安装成功啦!</strong></li></ol><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/030.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/031.png"></p><p>至此，第二步就全部成功完成啦！</p><br><br><br><br><br><br><br><br><br><br><br><br><h2 id="绑定-GitHub-并提交文件"><a href="#绑定-GitHub-并提交文件" class="headerlink" title="绑定 GitHub 并提交文件"></a>绑定 GitHub 并提交文件</h2><p>我们已经注册成功了 GitHub 和下载完成了 Git ，上文提到过， GitHub 是一个“仓库”（云端），将要装载着你个人博客的相关文件。 Git 则是一个“传输工具”，连接着你的电脑（本地文件）和你的“仓库”（ GitHub ）。<br><strong>那么现在我们要做的就是将“传输工具”对上“仓库”的接口</strong></p><ol><li>绑定 GitHub</li></ol><p>上文提到了勾选 Git 自带的 SSH ，在此处我们需要利用。首先我们要了解什么是 SSH ？<br>SSH （安全外壳协议，Secure Shell 的缩写）是建立在应用层基础上的安全协议。SSH 是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协议，利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题。<br>简单来说， <strong>SSH 就是保障你的账户安全，将你的数据加密压缩，不仅防止其他人截获你的数据，还能加快传输速度</strong></p><p>我们要用 git 上传文件到 GitHub 首先得利用 SSH 登录远程主机，而登录方式有两种：一种是口令登录；另一种是公钥登录。口令登录每次都要输入密码十分麻烦，而公钥登录就省去了输入密码的步骤，所以我们选择公钥授权。首先我们得在 GitHub 上添加 SSH key 配置，要想生成SSH key，就要先安装 SSH，不过我们安装了 Git Bash，其应该自带了 SSH。检验一下是否安装 SSH。</p><ul><li>打开命令提示符，输入 ssh ，查看本机是否安装成功 SSH ，当出现如下图所示，则表示安装 SSH 成功</li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/032.png"></p><br><br><ul><li>再直接输入命令 <strong>（注意空格： -t 和 rsa 前有空格）</strong>（表示我们指定 RSA 算法生成密钥）<br> <strong>然后敲四次回车键</strong>，之后就就会生成两个文件，分别为秘钥 id_rsa 和公钥 id_rsa.pub（ pub 为扩展名），在命令提示符上会有位置说明，如下图所示。</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa  </span><br></pre></td></tr></table></figure><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/033.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/034.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/036.png"></p><br><br><p>如果命令提示符操作完成后，实在找不到文件也没有关系，按照以下步骤直接在 Git Bash 上打开就行，分别输入 <strong>（注意：git中的复制粘贴不是 Ctrl+C 和 Ctrl+V，而是 Ctrl+insert 和 Shift+insert.）</strong>   <strong>（注意空格）</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd ~/.ssh   </span><br><span class="line">ls   </span><br><span class="line">cat id_rsa.pub   </span><br></pre></td></tr></table></figure><p>然后产生的代码其实是跟公钥文件 id_rsa.pub 中的代码一样的，如下图所示。</p><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/035%20(1).png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/035.png"></p><br><br><ul><li>之后登录 GitHub ，点击右上角的个人图标，再在弹出框中点击 setting （设置），如下图所示</li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/037.png"></p><br><br><ul><li>接着，如下图，先点击 <strong>SSH and GPG keys</strong> ，再点击 <strong>New SSH key</strong></li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/038.png"></p><br><br><ul><li>再将公钥文件 <strong>id_rsa.pub</strong> 中的内容（或者 <strong>Git bash</strong> 中产生的代码内容）复制粘贴到 key 内，<br><strong>（一定要输入标题且符合要求，此处跟上面所提及的教程有所出入，如果不输入标题就不会添加成功新的 SSH 密钥，当添加成功时，你的邮箱会收到提醒）</strong><br>再点击 <strong>Add SSH key</strong> ，如下图：</li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/039.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/040.png"></p><br><br><ul><li>最后，在命令提示符中输入命令并回车   <strong>（注意空格：-T和git前有空格）</strong><br>如果出现了第一个图中的情况，直接输入 yes 回车即可。<br>出现图二中的代码即表示绑定成功啦！</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/041.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/042.png"></p><p>到此，该步骤中的绑定 Git 已经完成了，接下来就是提交文件啦！</p><br><br><br><br><ol><li>提交文件</li></ol><p>这一步就是<strong>将 GitHub 中的仓库通过 Git 连接到本地，然后从本地上传文件到 GitHub 的仓库</strong>，以确定连接成功。   该步骤与上文提到的教程几乎完全不符，在此也花了很多时间摸索，此方法也算比较简单的。（此步骤是为了连接本地、 Gi 、 GitHub 三者，为后面的铺垫，该新建的仓库意义不大，后面可以删除）</p><ul><li>首先，点击 GitHub 主页右上角的个人头像，打开“ your profile ”（个人资料）。<br>点击右上角“ + ”按钮，创建新的仓库。<br>命名后，点击最下方的“创建储存库”<br><em><strong>注意：不用勾选添加自述文件！！！</strong></em>（后面会自己上传自述文件，且添加了自述文件，就跟此方法有所差异）<br>如下图所示</li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/043.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/044.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/045.png"></p><br><br><ul><li>打开新建立的仓库<br>注意第二张图最下方红色框框里的内容，这是我们等下所需要的相关代码<br> <strong>（注意空格）</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;# qinghuan&quot; &gt;&gt; README.md   </span><br><span class="line">git init    </span><br><span class="line">git add README.md   </span><br><span class="line">git commit -m &quot;first commit&quot;   </span><br><span class="line">git branch -M main   </span><br><span class="line">git remote add origin https://github.com/Beixuansong/qinghuan.git    </span><br><span class="line">git push -u origin main  </span><br></pre></td></tr></table></figure><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/046.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/047.png"></p><br><br><p>上面是准备工作，接下来是进入正题  </p><ul><li><p>首先，我们要选择一个文件夹来储存本地数据（即储存本地仓库），例如下图，我选择在 D 盘中创立一个新的文件夹 qinghuan （建议创立在 D 盘以便后续操作），来储存本地仓库（ git ）   </p></li><li><p>在上述储存文件夹中再建立一个<strong>新的空文件夹</strong>（ git ）作为 Git 的本地仓库（命名随意，但必须是英文），如下图所示</p></li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/048.png"></p><br><br><ul><li>打开命令提示符，如图所示，最先开始是对C盘的编辑，而我创立的文件夹在 D 盘，所以我<strong>需要改变路径</strong>，进入到我们刚刚创立的本地仓库（ git ）中 <strong>（注意空格）</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">d:  </span><br><span class="line">cd d:/qinghuan/git</span><br></pre></td></tr></table></figure><ul><li><p>先输入代码，在文件夹中还会产生一个md文件，如图所示</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;# qinghuan&quot; &gt;&gt; README.md</span><br></pre></td></tr></table></figure><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-10-04%20153131.png"></p></li><li><p>接着我们输入代码<br>（ <strong>git init 命令来初始化一个 Git 仓库</strong>，意思是将这个 git 文件夹初始化，并让他作为本地仓库，当出现图二的代码，表示初始化成功，现在它才真正意义上的具有了“本地仓库”的意义。） <strong>（注意空格）</strong></p></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/049.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/050.png"></p><br><br><ul><li>初始化之后，你会发现在 git 文件夹（本地仓库）多出了一个<strong>隐藏文件夹 .git</strong> （该文件夹是 Git 自带的传输工具，将文件从本地传输至 GitHub 库中）。无需在意它，但可以检查上一步的初始化是否成功，如图一所示</li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/051.png"></p><br><br><ul><li>再在命令提示符上分别输入指令（必须是在 git 路径下，如图一所示） <strong>（注意空格）</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git add README.md</span><br><span class="line">git commit -m &quot;first commit&quot;   </span><br></pre></td></tr></table></figure><ul><li><strong>注意</strong>，在输入 git commit 命令中，会碰到如图二的情况，需要输入命令（核对信息） <strong>（注意空格）</strong><br>第一个引号里填注册 <strong>GitHub 所用的邮箱</strong><br>第二个引号里填 <strong>GitHub 的昵称</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.email &quot;&quot; </span><br><span class="line">git config --global user.name &quot;&quot;  </span><br></pre></td></tr></table></figure><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/053.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/054.png"></p><br><br><p>之后接着输入命令, <strong>git remote add origin 后面内容是各自不同</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git branch -M main</span><br><span class="line">git remote add origin https://github.com/Beixuansong/qinghuan.git</span><br><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure><p> 如果最后一步无法提交完成，则使用GitHub备用地址: 有时候GitHub可能在不同的地址上提供服务。您可以尝试使用备用地址来推送代码。在命令提示符中执行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git remote set-url origin https://github.com/Beixuansong/qinghuan.git</span><br></pre></td></tr></table></figure><p>然后再次尝试推送：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure><ul><li>在输入完 git push -u origin main  <strong>（注意空格）</strong> 后，第一次上传需要输入密码，验证成功后，如图二所示<br>并再次打开新建的储存库，此时界面应如图三所示，即该步骤完成啦</li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/055.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/056.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/057.png"></p><p>到此，步骤三全部结束啦！</p><p>简单论述一下，<strong>如想要深入了解，可以查看 <a href="https://www.runoob.com/git/git-tutorial.html">Git教程</a></strong> </p><ul><li><strong>git add</strong> 命令可将该文件的修改添加到暂存区  ，文件 RAEADME.md 只是我们在 git 文件夹中创立的一个文本，现在并不能说是本地仓库里的文件，先通过 git add 上传到暂缓区  </li><li><strong>git commit</strong> 命令将暂存区内容添加到本地仓库中 ，现在才可以说文件 README.md 在本地仓库里    </li><li><strong>git branch</strong> 命令创建分支  ， 因为要将本地仓库中的文件上传到 GitHub 仓库中，则要在不损坏其他内容的情况下，进行上传，所以我们需要使用分支（使用分支意味着你可以从开发主线上分离开来，然后在不影响主线的同时继续工作）  </li><li><strong>git remote add <remote_name> <remote_url></remote_url></remote_name></strong> 添加一个新的远程仓库。指定一个远程仓库的名称和 URL ，将其添加到当前仓库中。其实也就是将你的本地仓库连接到你新建的 GitHub 库中。<strong>如果说 GitHub 的绑定是 Git 与 GitHub 进行配对连接，那么该代码就是将本地仓库、 Git 、 GitHub 仓库三者连接起来</strong>   </li><li><strong>git push</strong> 命令用于从将本地的分支版本上传到远程并合并 ，上传到远程库即GitHub库</li></ul><br><br><br><br><br><br><br><br><br><br><br><br><h2 id="购买域名"><a href="#购买域名" class="headerlink" title="购买域名"></a>购买域名</h2><p><strong>“域名”</strong><br>比如我的域名是 <strong>qinghuan.中国</strong>，输入该网址，可以进入到了我的博客。 通俗的说，它想到于一个 <strong>“门”</strong>， 这个门是通向我的 GitHub 仓库的，通过这个门，我们可以从外部进入 GitHub 仓库（无法修改仓库中的内容），看到仓库里的文件，再在主题的作用下，看到了现在博客的模样。<br>那么我们现在要有这个 <strong>“门”</strong>，需要购买它<br><a href="https://buy.cloud.tencent.com/domain">腾讯云域名注册</a></p><ol><li>浏览器直接搜索“域名购买”，进入腾讯云域名（阿里云，新网都可以，上文提到的教程就是阿里云）</li></ol><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/058.png"></p><br><br><br><br><ol start="2"><li>在腾讯云中搜索域名，并点击域名注册，如下图所示</li></ol><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/059.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/060.png"></p><br><br><br><br><ol start="3"><li>输入你想要的域名前缀（英文），例如我的域名前缀就是“ qinghuan ”，直接查询，它会显示所有相关前缀的域名<br>找到自己喜欢的域名后缀，登录腾讯云并将其加入购物车，进行购买，如下图所示</li></ol><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/061.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/062.png"></p><br><br><br><br><ol start="4"><li>在购买页面，第一次购买要“创建信息模板”，审核大概需要两到三个小时<br>建议开启自动续费服务，自己的博客肯定会一直用下去，除非你想换一个域名，你也可以之后再关闭该服务<br>之后就可以提交订单付款啦</li></ol><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/063.png"></p><p>该步骤很简单的，到此就完成啦！（“<strong>门</strong>”买好啦！）     </p><br><br><br><br><br><br><br><br><br><br><br><br><h2 id="安装node-js和Hexo"><a href="#安装node-js和Hexo" class="headerlink" title="安装node.js和Hexo"></a>安装node.js和Hexo</h2><p>这一步骤是为 <strong>“门”</strong> 的安装做好准备工作！</p><p><strong>node.js</strong> 在此相当于一个工具，有很多 npm 命令来源于它</p><p><strong>Hexo</strong> 是一个快速、简洁且高效的博客框架（最原始的主题），基于 Node.js 开发。Hexo 使用 Markdown 解析文章，并生成静态页面，非常便于静态部署和加载<br>其次由于 Hexo 框架非常轻量，只包含静态页面的生成，以及文章的分类页，甚至没有后台管理，但简约的框架总能激发开发者们的开发欲望，于是大量形态各异的主题诞生了，目前官方收录了 300 多款主题。</p><ol><li>node.js 的安装</li></ol><ul><li>直接进入 <a href="https://nodejs.org/en">node.js官网</a> 进行下载<br><strong>最好下载右边的新版，可以体验更多主题</strong></li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/064.png"></p><br><br><ul><li>如下图所示安装 node.js</li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/065.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/067.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/068.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/069.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/070.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/071.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/072.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/073.png"></p><br><br><ul><li>安装完成后，可以用打开命令提示符检验一下是否安装成功并检查版本，直接输入指令，如下图所示<br> <strong>（注意空格）</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node -v   </span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/074.png"></p><br><br><ul><li><strong>设置 npm 在安装全局模块时的路径和环境变量</strong><br>通俗点说，如果不设置的话，安装模块的时候就会把模块装到 C 盘，占用 C 盘的空间，并且有可能安装好 hexo 后却无法使用，所以我们需要设置一下：<br>首先在 node.js 文件夹中<strong>新建两个空文件夹 node_cache 、 node_global</strong> ，如图一所示<br>再打开命令提示符，输入两条指令，使其生效，如图二所示<br> <strong>（注意空格）</strong><br>第一个引号中间为<strong>文件夹 node_global 的位置</strong><br>第二个引号中间为<strong>文件夹 node_cache 的位置</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm config set prefix &quot;&quot;    </span><br><span class="line">npm config set cache &quot;&quot;   </span><br></pre></td></tr></table></figure><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/075.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/076.png"></p><br><br><ul><li><strong>环境变量的设置</strong><br>首先打开环境变量设置（ win11 ：系统——系统信息——高级系统设置——高级——环境变量）<br>如下图所示</li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/077.png"></p><br><br><ul><li>如下图所示，<strong>先在系统变量中</strong>新建一个<br><strong>变量名： NODE_PATH</strong><br>变量值： 就是 <strong>node_modules 文件夹的路径</strong>（此处与所给教程不同）</li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/078.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/079.png"></p><br><br><ul><li><strong>再编辑一个用户变量</strong>，如下图所示<br>对用户变量中的 Path 进行编辑<br>将<strong>变量值改为 node_global 文件的路径</strong></li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/080.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/081.png"></p><br><br><ul><li>之后再命令提示符中输入指令 <strong>（注意空格）</strong> ，并且之后你会在 node_global 文件夹里的那个 node_modules 文件夹中看见 webpack 文件夹，即环境变量修改成功啦！<br>如下图所示</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install webpack -g</span><br></pre></td></tr></table></figure><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/082.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/083.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/084.png"></p><br><br><br><br><ol><li>hexo 的安装</li></ol><ul><li>首先我们再次创建一个 GitHub 仓库（之前提交文件的那个仓库可以删除了），作为真正的博客本地仓库（<strong>该库很重要</strong>）如下图所示<br><strong>该库的名字必须以 .github.io 结尾，必须勾选“添加自述文件”</strong></li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/085.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/086.png"></p><br><br><ul><li>打开新建库，进入设置，点击右侧的 page ，出现如图所示图样即可</li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/087.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/088.png"></p><br><br><ul><li>在 <strong>D 盘或者 D 盘的某个文件夹下</strong>创建一个 blog 文件夹，来作为博客的本地仓库，如图所示</li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/089.png"></p><br><br><ul><li>打开命令提示符，先转入刚刚 D 盘下创立的 blog 文件夹，再输入指令，通过 nmp命令安装 Hexo <strong>（注意空格）</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/090.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/091.png"></p><br><br><ul><li>再接着输入 Hexo 命令 <strong>（注意空格）</strong><br>分别代表：<br>hexo init 初始化博客文件<br>hexo g 生成页面（全称hexo generate）<br>hexo s查看博客页面（全称hexo server）</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo init     </span><br><span class="line">hexo g   </span><br><span class="line">hexo s        </span><br></pre></td></tr></table></figure><p> hexo s 输入后，会给予一个网址，可以复制粘贴访问，那就是你目前的博客框架，如图三<br> <strong>结束访问后，必须返回命令提示符按 Ctrl+c ，以停止运行服务器</strong></p><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/092.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/093.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/094.png"></p><br><br><ul><li>现在回到我们的 blog 文件夹，用笔记本打开 _config.yml 文件，如下图所示<br>在文件的开头，可以添加代码，如图二所示 <strong>（注意空格：冒号后都有空格）</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">language: zh-CN    </span><br><span class="line">timezone: &#x27;Asia/Shanghai&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/096.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/097.png"></p><br><br><ul><li>接着在文件最底部，添加代码,如图一所示 <strong>（注意空格：冒号后都有空格）</strong><br>repository: 后面填写你的仓库地址，如图二<br>branch: mainGitHub目前的默认分支为“ main ” ，如图三</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:    </span><br><span class="line">  type: git    </span><br><span class="line">  repository:       </span><br><span class="line">  branch: main    </span><br></pre></td></tr></table></figure><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/098.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/099.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/100.png"></p><br><br><ul><li>再在命令提示符中输入代码（ blog 文件夹途径下）（如图一图二所示） <strong>（注意空格）</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save     </span><br><span class="line">hexo clean </span><br><span class="line">hexo g       </span><br><span class="line">hexo d       </span><br></pre></td></tr></table></figure><p>分别表示：<br>安装一键部署插件<br>清除缓存文件 db.json 和已生成的静态文件 public<br>生成网站静态文件到默认设置的 public 文件夹(hexo generate 的缩写)<br>自动生成网站静态文件，并部署到设定的仓库(hexo deploy 的缩写)  </p><p>图三，表示 hexo d 完成<br>图四，是最后完成以后，命令提示符输入 hexo s 就可以查看你的网页了</p><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/101.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/102.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/103.png"></p><p>到此， hexo 这个博客框架就套用好了，第五步就结束啦！   </p><br><br><br><br><br><br><br><br><br><br><br><br><h2 id="解析域名"><a href="#解析域名" class="headerlink" title="解析域名"></a>解析域名</h2><p>现在虽然可以访问我们的网站，但是网址是 GitHub 提供的：<a href="http://xxxx.github.io/">http://xxxx.github.io</a> 而我们想使用我们自己的个性化域名（我们买的那个“<strong>门</strong>”），这就需要绑定我们自己的域名。（开始安装“<strong>门</strong>”啦！）<br>现在来介绍解析域名和绑定域名</p><ol><li>解析域名</li></ol><ul><li>首先从<a href="https://cloud.tencent.com/search/%E5%9F%9F%E5%90%8D/1_1">腾讯云域名</a>（你购买域名的平台），进入控制台，对自己的域名进行解析，如下图所示</li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/105.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/106.png"></p><br><br><ul><li>添加第一个记录，如图一操作<br>添加第二个记录，如图二操作<br>第二个记录中的 ipv4 地址的获取，需打开命令提示符，输入代码 : ping + GitHub新建库的名字 <strong>（注意空格）</strong><br>注意网络不能连接错误，否则会出现内容丢失，如图三所示</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ping qinghuan.github.io </span><br></pre></td></tr></table></figure><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/107.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/108.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/109.png"></p><br><br><ul><li>在 blog 文件夹中的 source 文件夹中创建一个文本文档，并命名为 CNAME ，用记事本代开，填写你的域名，如图一<br><strong>保存关闭后要重命名，将扩展名 .txt 删除</strong>，如图二</li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/110.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/111.png"></p><br><br><ul><li>进入 Github 新建库，看看 CNAME 文件是否已经在你的项目中，并进入 setting （设置）</li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/112.png"></p><br><br><ul><li>在 page 选项中<br>将分支改为“ main ”，后面的文件改为“ root ”，点击 save （确定）  如图一<br>刷新之后下面会出现 custom domain （自定义域），如果你的域名没有自动添加，需要手动添加   如图二<br>最后，浏览器输入域名查看， 如图三</li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/113.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/114.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/115.png"></p><p>到此，我们的“门”已经安装到仓库上啦！<br>但“<strong>门</strong>”内过于单调，之后，我们要进行“<strong>门</strong>”内的修饰（添加主题）</p><br><br><br><br><br><br><br><br><br><br><br><br><h2 id="设置fluid主题"><a href="#设置fluid主题" class="headerlink" title="设置fluid主题"></a>设置fluid主题</h2><p>现在我们开始对“<strong>门</strong>”内的物品进行修饰操作！<br>首先进入 <a href="https://hexo.io/themes/index.html">Hexo主题官网</a> ,选择你喜欢的主题（<strong>点击进去，就可以看见相应主题的教程</strong>）<br>这里我们以 <a href="https://github.com/fluid-dev/hexo-theme-fluid">fluid主题设置</a> 为例 , 但在这里，我推荐我的fluid设置方法</p><ol><li>下载 fluid 主题</li></ol><ul><li>点击 fluid 主题，复制其网址，如图一图二所示</li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/116.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/117.png"></p><br><br><ul><li>之后打开命令提示符，转到 blog 文件夹下的 themems 文件夹中，再输入代码 <strong>（注意空格）</strong> ，如图一所示<br>之后，在 themes 文件夹中会有刚刚下的新文件（其实<strong>该代码就是克隆了一个仓库到本地，而这个仓库里的东西是关于fluid主题的相关代码</strong>），如图二所示</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/fluid-dev/hexo-theme-fluid.git</span><br></pre></td></tr></table></figure><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/118.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/119.png"></p><br><br><ul><li>在 blog 文件夹中打开 _config.yml 文件，进行编辑，如图一<br>文件开头部分，在上一步骤也提过，语言和时间最好如图二设置，其他的随意<br>文件底部的 theme 设置，填写刚刚那个文件夹的名字（更换主题时，此处都需要更换），如图三<br><strong>（注意空格：冒号后都有空格）</strong></li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/120.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/121.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/122.png"></p><br><br><ul><li>最后打开命令提示符，转到 blog 文件夹下，分别输入代码  <strong>（注意空格）</strong><br>分别表示：<br>清除缓存文件 db.json 和已生成的静态文件 public<br>生成网站静态文件到默认设置的 public 文件夹(hexo generate 的缩写)<br>自动生成网站静态文件，并部署到设定的仓库(hexo deploy 的缩写)<br>通过网页浏览部署到仓库的文件（结束后记得“Ctrl+c”）<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean  </span><br><span class="line">hexo g         </span><br><span class="line">hexo d     </span><br><span class="line">hexo s        </span><br></pre></td></tr></table></figure></li></ul><p><em><strong>每次对 blog 文件夹进行了操作后，都要如此输入这四个命令！！！</strong></em>      </p><p><em><strong>每次对 blog 文件夹进行了操作后，都要如此输入这四个命令！！！</strong></em>      </p><p><em><strong>每次对 blog 文件夹进行了操作后，都要如此输入这四个命令！！！</strong></em>（重要的事说三遍）</p><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/123.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/124.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/125.png"></p><br><br><ul><li>hexo s 得到的网址就是本次对 blog 文件夹操作后的结果， 如图一所示<br>你也可以通过域名查看,  如图二所示<br><strong>注意：若修改的文件过大，通过域名查看修改情况可能会有延迟，所以通过 hexo s 浏览更直接</strong></li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/126.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/127.png"></p><ol><li>fluid 主题的修改</li></ol><ul><li>首先打开 blog 文件夹中的 themes 文件夹，再打开所用的主题文件夹fluid，用记事本打开 _config.yml 文本 ，如图一图二所示</li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/128.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/129.png"></p><br><br><ul><li>文件内容很多，包括了很多方面，每个人对于页面的要求不同，大家自行根据<a href="https://hexo.fluid-dev.com/docs/guide/">官方指南</a>调整<br><strong>注意，每当你改动 blog 文件夹，都需要在命令提示符中输入代码</strong> <strong>（注意空格）</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean    </span><br><span class="line">hexo g     </span><br><span class="line">hexo d     </span><br><span class="line">hexo s   </span><br></pre></td></tr></table></figure><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/130.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/131.png"></p><p>OKOK,到此，我们的“<strong>门</strong>”也安装成功，内部装饰也完成啦！<br>现在我们要往里面添加点 “<strong>装饰品</strong>”！</p><br><br><br><br><br><br><br><br><br><br><br><br><h2 id="个人博客的使用"><a href="#个人博客的使用" class="headerlink" title="个人博客的使用"></a>个人博客的使用</h2><p>现在，就最后一步啦！万事俱备，只欠东风<br>如何将自己写的文章添加到 blog 上呢？<br>莫慌，开讲！</p><ul><li><p>首先我们下载一个图片管理插件 Hexo-Asset-Image<br>Hexo-Asset-Image 是 Hexo 博客框架中的一个插件，用于管理和处理博客中的图片资源。它可以帮助你在写作博客时更方便地引用和管理图片。<br>使用 Hexo-Asset-Image 插件，<strong>你可以将图片文件放入指定的文件夹中，并通过简单的语法来引用这些图片（很重要）</strong>。插件会自动将图片复制到生成的静态网页中，并生成相应的 URL</p></li><li><p>在命令提示符 blog 路径下，输入代码 <strong>（注意空格）</strong> ,如下图所示</p></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install https://github.com/CodeFalling/hexo-asset-image --save</span><br></pre></td></tr></table></figure><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/132.png"></p><br><br><ul><li>打开 <strong>blog 文件夹</strong>下的_config.yml 文件（<strong>不是主题文件夹下的文件</strong>），在 writing 部分进行修改， 如图二所示<br>将 post_asset_folder 后的 false 改为 ture<br>这个配置的意思是每次新建一个博客，会增加一个和博客同名的文件夹（可以用于存放照片）<br>再在下方添加三行代码 <strong>（注意空格）</strong> , 可以有利于通过几个简单的语法来引用图片</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">marked:       </span><br><span class="line">  prependRoot: true        </span><br><span class="line">  postAsset: true</span><br></pre></td></tr></table></figure><p><em><strong>修改完这些操作后记得在命令提示符中输入 hexo clean 那四个命令</strong></em></p><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/133.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/135.png"></p><br><br><ul><li>准备工作完成，现在，在命令提示符 blog 路径下，输入代码 <strong>（注意空格）</strong>, 如图二<br>同样，你也可以学习 _posts 文件夹中的 Hello-world 文档中的内容 （blog\source_posts）如图一 （该文档要在你添加一份 .md 文档后才可以删除，因为空的 _post 文件夹无法通过命令添加文档）</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new &quot;&quot;</span><br></pre></td></tr></table></figure><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/136.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/137.png"></p><br><br><ul><li>可以发现，在 _posts 文件夹中多出来两个文件 .md 文档是通过 markdown 来编写文章的，另一个同名文件夹可以用来存储照片</li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/138.png"></p><br><br><ul><li>举例说明，我需要使用文件夹中的照片<br>我们先试试复制粘贴，如下图所示，那么我们会发现在 _posts 文件夹中多出来一张照片， .md 文章使用的照片是该照片，而不是同名文件夹中的照片，如果将这张照片再放进文件夹中，markdown中就不会显示照片了，所以该照片只能放在 _posts 文件夹中<br>那么这种方式使用照片，会使 _post 文件夹会很杂乱。</li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/139.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/140.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/141.png"></p><br><br><ul><li>那么我们换一种方式引用照片，在你要引用照片的地方 <em><strong>英文输入</strong></em>  “**![]()<strong>”（</strong>必须是英文,且中间无空格<strong>）<br>[]内输入你给图片的命名<br>()中</strong>先输入“.&#x2F;”，此时会弹出选择，直接选择同名文件夹，再选择你想引用的图片**，就完成啦，如下图所示<br><strong>（”.&#x2F;“代表目前所在的目录,在这里即 _post 文件夹,” . .&#x2F;“代表上一层目录，”&#x2F;“：代表根目录）</strong></li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/142.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/143.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/144.png"></p><br><br><ul><li>保存，<strong>输入hexo clean四个命令</strong>上传，在你的博客中就可以看见啦!</li></ul><p><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/145.png"><br><img src="https://my-bucket-1319331113.cos.ap-guangzhou.myqcloud.com/%E5%B0%8F%E7%99%BD%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8Efluid%E4%B8%BB%E9%A2%98%E8%BF%90%E7%94%A8/146.png"></p><p><strong>最后再提醒一下，每当你改动 blog 文件夹或者上传新的文章，都需要在命令提示符中输入代码上传到云端，进行保存</strong> <strong>（注意空格）</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean    </span><br><span class="line">hexo g     </span><br><span class="line">hexo d     </span><br><span class="line">hexo s  </span><br></pre></td></tr></table></figure><p>那么到此，我们的个人博客搭建与 fluid 主题的运用就全部完成啦！</p><p>最后，再次感谢小智不厌其烦的解答以及<a href="https://www.zhihu.com/people/mai-nv-hai-de-xiao-huo-chai-35-19">知乎枫叶</a>的教程,在搭建过程中也会遇到许多的问题和困难，我们应该积极的查询资料，有时候一个问题就要查半天，最后还有可能没解决，但是当问题解决时的满足感令人愉悦。所以，尝试解决，多去试一试吧！</p><p>我们的旅行，到此就要结束啦！也是时候说再见啦！</p>]]></content>
      
      
      <categories>
          
          <category> Hexo博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中医基础理论</title>
      <link href="/2023/07/12/Traditional-Chinese-Medicine/%E4%B8%AD%E5%8C%BB%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/"/>
      <url>/2023/07/12/Traditional-Chinese-Medicine/%E4%B8%AD%E5%8C%BB%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="1-绪论"><a href="#1-绪论" class="headerlink" title="1. 绪论"></a>1. 绪论</h1><p>&emsp;&emsp;在学习之前，我们应该知道什么是中医学以及它的属类。</p><p>&emsp;&emsp;<strong>中医学</strong>，它是一门发祥于古代，以基本理论为依据，以实践经验为主体，研究人类生命活动，中医学中健康与疾病转换规律及其预防诊断和保健的综合性科目。  &ensp;&ensp;说简单通俗点，就是通过整体观念和辨证论治等方法或特点研究人体生理、病理、疾病的诊断、防治和养生康复的医学科学。</p><p>&emsp;&emsp;中医学的学科属性，它属于自然科学范畴，以自然科学知识为主体，与人文社会科学等多种学科知识相交融的医学科学。</p><h2 id="中医学理论体系的形成与发展"><a href="#中医学理论体系的形成与发展" class="headerlink" title="中医学理论体系的形成与发展"></a>中医学理论体系的形成与发展</h2><h3 id="中医理论体系的形成基础"><a href="#中医理论体系的形成基础" class="headerlink" title="中医理论体系的形成基础"></a>中医理论体系的形成基础</h3><ol><li><p>环境基础 ： 黄河流域为华夏文明的发祥地，有着优越的自然环境，是农耕时期最适宜人类居住地的地方，由此，中医学中的一些思想由此慢慢产生。比如古人总结了黄河中下游流域的气候变化规律和王五随气候变化而变化的关联规律等等。</p></li><li><p>医学基础 ： 古代解剖学知识与医药学知识以及不断累积的医疗实践经验，是中医学理论体系形成的医学基础。早期社会，人们宰杀猎物和俘虏，从而观察动物和人体的内部器官和结构；药物起源于饮食，古人不断地试用药草，从而知道其特性与作用。</p></li><li><p>自然科学基础 ： 任何自然科学的发展都是相互渗透的、相互影响的和相互促进的。例如，中国古代冶炼技术的发展为中医提供了治疗针具和手术器具，农业促进了中药学的发展等等</p></li><li><p>文化基础 ： 伴随先秦百家争鸣而来的精气、阴阳、五行各学说等哲学理论渗透到中医学，对中医学理论体系的形成产生了积极影响。<br>道家文化以老子、庄子为代表的先秦道家的“道”和“无为而无不为”的哲学思想，以及道教注重修炼内丹术，对中医学养生理论方法的完备也起到了重要作用；<br>儒家文化的“天人之际，合而为一”，使得中医学强调人与自然是一个整体，儒学的中庸之道，让中医在理论上吸收了中和观念，认为人体的气血阴阳不是一成不变的，而是在不停的运动中维持相对平衡的综合状态；<br>佛教文化也对中医学产生了深远的影响，如中医的天人合一理论吸收了佛教百依理论等等，此外佛教的“慈悲为怀，众生平等”的主张，也给中医学医德带来了积极的作用。</p></li><li><p>哲学基础 ： 精气学说、阴阳学说和五行学说，是中国古代关于世界本源和发展变化的宇宙观和方法论，是中医学理论体系的形成和发展的主要哲学基础。</p></li></ol><h3 id="中医理论体系的形成和发展创新"><a href="#中医理论体系的形成和发展创新" class="headerlink" title="中医理论体系的形成和发展创新"></a>中医理论体系的形成和发展创新</h3><h4 id="战国至秦汉（确立）"><a href="#战国至秦汉（确立）" class="headerlink" title="战国至秦汉（确立）"></a>战国至秦汉（确立）</h4><p>&emsp;&emsp;战国至秦汉时期的《黄帝内经》《难经》《伤寒杂病论》《神农本草经》等医学典籍问世，标志着中医理论体系的确立。</p><ul><li><p>《黄帝内经》 ： 现存最早的医学典籍，是中医学理论体系形成的标志，被奉为“医家之宗”。后世分为《素问》《灵枢》两部分，各81篇。其书通过整体观念，阐释了人体内外环境的统一性，阐述了人体的生理、病理以及疾病的诊断和防治，探讨了哲学领域中的一系列重大问题，诸如气、天人关系、形神关系等。</p></li><li><p>《难经》 ： 在藏象、脉学和针灸等方面对《黄帝内经》做出了补充，与《黄帝内经》同为指导后世临床实践的重要理论性著作。</p></li><li><p>《伤寒杂病论》 ： 我国第一部临床学专著，确立了的辨证论治和理法方药理论体系，后世分为《伤寒论》和《金匮要略》。《伤寒论》以外感病为主，以六经分证为辨证论治总纲，《金匮要略》以内伤杂病为主，用脏腑病机理论进行证候分证。其作者张机（字仲景）被称为医圣，该书被称为“方书之祖”。</p></li><li><p>《神农本草经》 ： 现存最早的中药学专著，共收载药物365种，创立了四气五味理论，为后世中药学理论体系的形成和发展奠定了基础。</p></li></ul><h4 id="魏晋隋唐时期（之后发展创新）"><a href="#魏晋隋唐时期（之后发展创新）" class="headerlink" title="魏晋隋唐时期（之后发展创新）"></a>魏晋隋唐时期（之后发展创新）</h4><ul><li><p>晋代王叔和编撰《脉经》，是我国第一部脉学专著，确立的寸关尺三部脉位，其弟子整理了24种病脉及其主证。  （其中寸口脉法，始于《黄帝内经》详于《难经》，阐发于《脉经》）  </p></li><li><p>晋代皇甫谧编撰《针灸甲乙经》是我国现存最早的针灸学专著。  </p></li><li><p>隋代巢元方编撰《诸病源侯论》是我国第一部病因病机证候学专著，系统的论述了疾病的病因和病机。   </p></li><li><p>唐代孙思邈编撰了《备急千金要方》和《千金翼方》，详述了唐以前的医学理论、方剂、诊法、治法、食养等。</p></li></ul><h4 id="宋金元时期"><a href="#宋金元时期" class="headerlink" title="宋金元时期"></a>宋金元时期</h4><ul><li><p>北宋钱乙，著《小儿药证直觉》，为中医儿科的奠基著作，发展了辨证论治理论体系，开创并完善了小儿脏腑辨证理论及治疗。</p></li><li><p>宋代陈言，著《三因极一病症方论》，提出三因学说分为内因、外因、不内外因。</p></li><li><p>金元时期的刘完素、张从正、李杲、朱震亨，四者被称为金元四大家。  </p><ul><li>刘完素是寒凉派代表人物。他的学术主张是“六气皆从火化”和“五志过极，皆为热甚”。倡导火热论，他的代表治法是清热泻火。  </li><li>李杲（字东垣）是脾胃派代表人物，学术主张是“内伤脾胃，百病由生”，“胃虚，元气不足，诸病所生”。倡导补土论，其代表治法为温补脾胃。  </li><li>张从正为攻邪派代表人物，学术主张“病由邪生”“邪去则正安”。倡导攻邪论，其代表治法为汉，吐，下。  </li><li>朱震亨（字丹溪）为养阴派代表人物，学术主张为“阳常有余，阴常不足”。倡导相火论，其代表治法为滋阴降火。</li></ul></li></ul><h4 id="明清时期"><a href="#明清时期" class="headerlink" title="明清时期"></a>明清时期</h4><p>&emsp;&emsp;明清时期，温病学说成熟，是中医理论创新与突破。温病是多种急性外感温热病的统称，多具有传染性和流行性。</p><ul><li>明代吴有性（字又可），著《瘟疫论》，创戾气说，指出瘟疫的病因是戾气而非一般的六淫病邪（风，寒，暑，湿，燥，火）。</li></ul><p>明代，温补学派争鸣<br>张介宾（字景岳），著《景岳全书》《类经》<br>赵献可，著《医贯》</p><ul><li><p>清代叶桂（字天士），著《温热论》，提出了“卫气营血辨证”。从外至里，从轻至重。“卫之后方言气，营之后方言血”。</p></li><li><p>清代薛雪（字生白），著《湿热条辨》。</p></li><li><p>清代吴瑭（字鞠通），著《温病条辨》，创立了温热病的“三焦辩证理论”。</p></li></ul><p>清代，温补学派争鸣<br>李世珍（药圣），著《草本纲目》<br>李中梓，著《先后天本说》《乙癸同源说》</p><ul><li>此外，清代王清任，著《医林改错》，改正了古医籍中在人体解剖方面的某些错误，肯定了“灵机记性不在心在脑”并发展了“淤血理论”和“脑主思维说”</li></ul><h4 id="近代与现代"><a href="#近代与现代" class="headerlink" title="近代与现代"></a>近代与现代</h4><p>&emsp;&emsp;有继续走收集和整理前人的学术成果之路，如20世纪30年代曹炳章主编的《中国医学大成》。<br>&emsp;&emsp;也有出现了中西汇通和中医学理论科学化的思潮，以唐宗海，朱沛文，恽铁礁，张锡纯为代表的中西医汇通学家，认为中医学各有优势，可以殊途同归，如张锡纯所著的《医学衷中参西录》</p><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><p>最早的儿科专著————《颅囟经》<br>最早的外科专著————《刘涓子鬼遗方》<br>最早的骨伤科专著————《仙授理伤续断秘方》<br>最早的妇产科专著————《经效产宝》<br>最早的炮制学专著————《雷公炮制论》</p><br><br><br><h2 id="中医学的基本特点"><a href="#中医学的基本特点" class="headerlink" title="中医学的基本特点"></a>中医学的基本特点</h2><br><br><br><h1 id="2-阴阳五行"><a href="#2-阴阳五行" class="headerlink" title="2. 阴阳五行"></a>2. 阴阳五行</h1><br><br><br><h1 id="3-藏象"><a href="#3-藏象" class="headerlink" title="3. 藏象"></a>3. 藏象</h1><br><br><br><h1 id="4-气、血、津液"><a href="#4-气、血、津液" class="headerlink" title="4. 气、血、津液"></a>4. 气、血、津液</h1><br><br><br><h1 id="5-经络"><a href="#5-经络" class="headerlink" title="5. 经络"></a>5. 经络</h1><br><br><br><h1 id="6-病因与发病"><a href="#6-病因与发病" class="headerlink" title="6. 病因与发病"></a>6. 病因与发病</h1><br><br><br><h1 id="7-病机"><a href="#7-病机" class="headerlink" title="7. 病机"></a>7. 病机</h1><br><br><br><h1 id="8-防治原则"><a href="#8-防治原则" class="headerlink" title="8. 防治原则"></a>8. 防治原则</h1><br><br><br>]]></content>
      
      
      <categories>
          
          <category> 中医 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 中医 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中医诊断学</title>
      <link href="/2023/07/12/Traditional-Chinese-Medicine/%E4%B8%AD%E5%8C%BB%E8%AF%8A%E6%96%AD%E5%AD%A6/"/>
      <url>/2023/07/12/Traditional-Chinese-Medicine/%E4%B8%AD%E5%8C%BB%E8%AF%8A%E6%96%AD%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="四诊"><a href="#四诊" class="headerlink" title="四诊"></a>四诊</h1><br><br><br><h1 id="辨证"><a href="#辨证" class="headerlink" title="辨证"></a>辨证</h1>]]></content>
      
      
      <categories>
          
          <category> 中医 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 中医 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>恋爱与婚姻</title>
      <link href="/2023/07/12/Thought/%E6%81%8B%E7%88%B1%E4%B8%8E%E5%A9%9A%E5%A7%BB/"/>
      <url>/2023/07/12/Thought/%E6%81%8B%E7%88%B1%E4%B8%8E%E5%A9%9A%E5%A7%BB/</url>
      
        <content type="html"><![CDATA[<p>&emsp;&emsp;浅述一下个人对恋爱与婚姻的看法吧</p><br><p>&emsp;&emsp;恋爱和婚姻就表层而言，既是有清楚的界限也是没有清楚的界限的，清楚是因为它们中间就隔了一份结婚证，不清楚是因为，有人谈了一辈子恋爱都没有结婚，但却彼此犹如夫妻一般，也有人刚开始就结婚了再互相了解，就像刚开始恋爱一般。所以，就我个人而言，这本就是一个连续的过程，是不能分开的，我们应该整体的看待，用“走完一生”去看待可能更合适。</p><br><p>&emsp;&emsp;那么既然选择去与某个异性去谈恋爱，则应该认真去对待，是抱有以走完一生为目的去相处，那倘若抱着随意的心态，碰到一点小事就不愉快就分开，那何谈走完一生呢？应该是彼此努力的去对待，好好的珍惜彼此，不要因为一些不重要的小事而烦躁，从而导致彼此的关系破裂。</p><br><p>&emsp;&emsp;在这浮躁的社会里，彼此互相喜欢的人更应该放慢节奏，去细细体会两人在一起的美好，彼此细细的了解，不可能一开始就是爱着对方，那样只会显得太肤浅，刚开始应该是彼此心中相互的欢喜，想着每天都腻在一起，眼中都是满满的彼此，心中的欢喜是难以平静。慢慢加深对彼此了解，再加上热恋期后的平静，我们肯定会发现彼此身上的一些缺点，这个时候就需要我们去互相的磨合了，毕竟世界上并无两片相同的叶子，而且人无完人，个人的一些小习惯和小毛病，对方不一定会忍受，所以最好的办法就是彼此的互相迁就，多一点包容，彼此都互相的为对方多考虑考虑，那怎么会为一点小事而不愉快呢。只要不是一些原则性的错误，个人觉得还是可以去包容的，但是不能只是一方的努力，这本就是两个人的事情，彼此都应该去熟悉彼此和为了彼此去改掉自身的一些不好的习惯。</p><br><p>&emsp;&emsp;一段时间的磨合，彼此也会慢慢熟悉彼此，可能也会觉得这似乎也没什么，说不定彼此的一些坏习惯还在这个过程中被改正了。之后归于平静，彼此的心中都已经有了彼此，彼此为了自己的事业去努力奋斗，去为了两人共同的未来去准备。把彼此都规划在彼此的未来中，携手共同去达到两人共同的未来。</p><br><p>&emsp;&emsp;那么现在就是在喜欢与爱之间的装换过程。爱本来就是一种责任，是愿意为彼此负责任，更是一种想走下去的决心，想和彼此在一起生活一辈子，是想跟对方组建一个家。那这需要自身有一定条件，毕竟作为普通人，生活就是简简单单的过日子，并不觉得有多不平凡，简简单单的走完一生就是王道。</p><br><p>&emsp;&emsp;当彼此有了可以面对未来一些困难的能力，比如永不言弃的精神等一些品质，和一定的经济基础，就像如果家人生病了，应该有一定的经济能力可以治病。这就可以进入法定的婚姻阶段了，其实无非也就是两人在一起平平淡淡的生活，生儿育女，培养好下一代，好好的经营起一个家。可能会有人说这很单调，但生活就是如此，作为普通人，经营好自己的一亩三分地，两人或一家三口空暇时间可以在一些名胜古迹走走，平平淡淡的走完一生或许比一时的轰轰烈烈更有意义。</p><br><p>&emsp;&emsp;至于择偶，应该看重的是应该是对方的人品，和自己的感觉。至于距离和年龄而言，年龄上下差三岁就可以了，相差太大，所经历的东西太不一样，就会有隔阂了。距离尽量还是要同城，可以更好的促进感情，最好的感情也抵不过距离吧。但也仅是如此，倘若两人真心喜欢，我想他们会克服他们之间的一切困难。</p><br><p>&emsp;&emsp;我想这才是最美的婚姻吧，不在于婚姻之后是多美好，而是在于这个整个的过程。最美不在于有多么轰轰烈烈，或者有多么有趣，而在于能否跟自己喜欢的人白头到老，平平淡淡。再说跟想在一起的人在一起，这本身就是有趣和美好的事！</p>]]></content>
      
      
      <categories>
          
          <category> 思想 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 三观 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/07/11/Blog/hello-world/"/>
      <url>/2023/07/11/Blog/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
